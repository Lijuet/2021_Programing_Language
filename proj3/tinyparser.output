Nonterminals useless in grammar

   string


Terminals unused in grammar

   STRING_TYPE
   STRING
   LEFT_SQA
   RIGHT_SQA
   ABSOLUTE


Rules useless in grammar

   76 string: STRING
   77       | ID LEFT_SQA expression RIGHT_SQA


State 120 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_procedure_decl_stm
    2        | main_procedure_decl_stm procedures
    3        | procedures main_procedure_decl_stm
    4        | procedures main_procedure_decl_stm procedures

    5 procedures: procedure_decl_stm
    6           | procedures procedure_decl_stm

    7 main_procedure_decl_stm: PROCEDURE MAIN LEFT_PAR RIGHT_PAR RETURN return_type body_of_procedure

    8 procedure_decl_stm: procedure_header body_of_procedure

    9 body_of_procedure: LEFT_BRA body return_stm RIGHT_BRA

   10 return_stm: RETURN expression SEMICOLON

   11 procedure_header: PROCEDURE procedure_id LEFT_PAR parameter_list RIGHT_PAR RETURN return_type
   12                 | PROCEDURE procedure_id LEFT_PAR RIGHT_PAR RETURN return_type

   13 procedure_id: ID

   14 parameter_list: ids COLON return_type
   15               | parameter_list SEMICOLON ids COLON return_type

   16 statements: statements statement
   17           | statement

   18 statement: assign_stm
   19          | code_block
   20          | if_stm
   21          | while_stm
   22          | procedure_call_stm

   23 if_stm: IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA
   24       | IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA

   25 while_stm: WHILE LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA

   26 assign_stm: lhs ASSIGN expression SEMICOLON

   27 lhs: ID

   28 expression: factor
   29           | expression binary_operator expression
   30           | uniary_operator expression
   31           | LEFT_PAR expression RIGHT_PAR

   32 factor: ID
   33       | integer
   34       | BOOLEAN
   35       | char

   36 integer: INTEGER

   37 char: CHAR

   38 binary_operator: PLUS
   39                | MINUS
   40                | ASTERISK
   41                | SLASH
   42                | EQUAL
   43                | NOT_EQUAL
   44                | BIG
   45                | BIG_EQUAL
   46                | SMALL
   47                | SMALL_EQUAL
   48                | AND
   49                | OR

   50 uniary_operator: PLUS
   51                | MINUS
   52                | NEGATE

   53 code_block: LEFT_BRA body_of_nested_stmt RIGHT_BRA

   54 body: var_decl_stms
   55     | var_decl_stms statements
   56     | statements

   57 body_of_nested_stmt: %empty
   58                    | var_decl_stms
   59                    | var_decl_stms statements
   60                    | statements

   61 return_type: INTEGER_TYPE
   62            | CHAR_TYPE
   63            | BOOLEAN_TYPE

   64 type: INTEGER_TYPE
   65     | CHAR_TYPE
   66     | BOOLEAN_TYPE

   67 var_decl_stms: var_decl_stms var_decl_stm
   68              | var_decl_stm

   69 var_decl_stm: VAR ids COLON type SEMICOLON

   70 argument_list: argument_list COMMA expression
   71              | expression
   72              | %empty

   73 procedure_call_stm: lhs ASSIGN procedure_id LEFT_PAR argument_list RIGHT_PAR SEMICOLON

   74 ids: ids COMMA ID
   75    | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOLEAN_TYPE (258) 63 66
CHAR_TYPE (259) 62 65
INTEGER_TYPE (260) 61 64
STRING_TYPE (261)
ID (262) 13 27 32 74 75
MAIN (263) 7
VAR (264) 69
STRING (265)
INTEGER (266) 36
BOOLEAN (267) 34
CHAR (268) 37
LEFT_PAR (269) 7 11 12 23 24 25 31 73
RIGHT_PAR (270) 7 11 12 23 24 25 31 73
LEFT_BRA (271) 9 23 24 25 53
RIGHT_BRA (272) 9 23 24 25 53
LEFT_SQA (273)
RIGHT_SQA (274)
SEMICOLON (275) 10 15 26 69 73
COLON (276) 14 15 69
COMMA (277) 70 74
IF (278) 23 24
ELSE (279) 24
WHILE (280) 25
PROCEDURE (281) 7 11 12
RETURN (282) 7 10 11 12
ASSIGN (283) 26 73
OR (284) 49
AND (285) 48
NEGATE (286) 52
EQUAL (287) 42
NOT_EQUAL (288) 43
BIG (289) 44
BIG_EQUAL (290) 45
SMALL (291) 46
SMALL_EQUAL (292) 47
PLUS (293) 38 50
MINUS (294) 39 51
ASTERISK (295) 40
SLASH (296) 41
ABSOLUTE (297)
ONLYIF (298)
UNIARY (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1 2 3 4, on right: 0
procedures (47)
    on left: 5 6, on right: 2 3 4 6
main_procedure_decl_stm (48)
    on left: 7, on right: 1 2 3 4
procedure_decl_stm (49)
    on left: 8, on right: 5 6
body_of_procedure (50)
    on left: 9, on right: 7 8
return_stm (51)
    on left: 10, on right: 9
procedure_header (52)
    on left: 11 12, on right: 8
procedure_id (53)
    on left: 13, on right: 11 12 73
parameter_list (54)
    on left: 14 15, on right: 11 15
statements (55)
    on left: 16 17, on right: 16 55 56 59 60
statement (56)
    on left: 18 19 20 21 22, on right: 16 17
if_stm (57)
    on left: 23 24, on right: 20
while_stm (58)
    on left: 25, on right: 21
assign_stm (59)
    on left: 26, on right: 18
lhs (60)
    on left: 27, on right: 26 73
expression (61)
    on left: 28 29 30 31, on right: 10 23 24 25 26 29 30 31 70 71
factor (62)
    on left: 32 33 34 35, on right: 28
integer (63)
    on left: 36, on right: 33
char (64)
    on left: 37, on right: 35
binary_operator (65)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49, on right: 29
uniary_operator (66)
    on left: 50 51 52, on right: 30
code_block (67)
    on left: 53, on right: 19
body (68)
    on left: 54 55 56, on right: 9
body_of_nested_stmt (69)
    on left: 57 58 59 60, on right: 23 24 25 53
return_type (70)
    on left: 61 62 63, on right: 7 11 12 14 15
type (71)
    on left: 64 65 66, on right: 69
var_decl_stms (72)
    on left: 67 68, on right: 54 55 58 59 67
var_decl_stm (73)
    on left: 69, on right: 67 68
argument_list (74)
    on left: 70 71 72, on right: 70 73
procedure_call_stm (75)
    on left: 73, on right: 22
ids (76)
    on left: 74 75, on right: 14 15 69 74


State 0

    0 $accept: . program $end

    PROCEDURE  shift, and go to state 1

    program                  go to state 2
    procedures               go to state 3
    main_procedure_decl_stm  go to state 4
    procedure_decl_stm       go to state 5
    procedure_header         go to state 6


State 1

    7 main_procedure_decl_stm: PROCEDURE . MAIN LEFT_PAR RIGHT_PAR RETURN return_type body_of_procedure
   11 procedure_header: PROCEDURE . procedure_id LEFT_PAR parameter_list RIGHT_PAR RETURN return_type
   12                 | PROCEDURE . procedure_id LEFT_PAR RIGHT_PAR RETURN return_type

    ID    shift, and go to state 7
    MAIN  shift, and go to state 8

    procedure_id  go to state 9


State 2

    0 $accept: program . $end

    $end  shift, and go to state 10


State 3

    3 program: procedures . main_procedure_decl_stm
    4        | procedures . main_procedure_decl_stm procedures
    6 procedures: procedures . procedure_decl_stm

    PROCEDURE  shift, and go to state 1

    main_procedure_decl_stm  go to state 11
    procedure_decl_stm       go to state 12
    procedure_header         go to state 6


State 4

    1 program: main_procedure_decl_stm .
    2        | main_procedure_decl_stm . procedures

    PROCEDURE  shift, and go to state 13

    $default  reduce using rule 1 (program)

    procedures          go to state 14
    procedure_decl_stm  go to state 5
    procedure_header    go to state 6


State 5

    5 procedures: procedure_decl_stm .

    $default  reduce using rule 5 (procedures)


State 6

    8 procedure_decl_stm: procedure_header . body_of_procedure

    LEFT_BRA  shift, and go to state 15

    body_of_procedure  go to state 16


State 7

   13 procedure_id: ID .

    $default  reduce using rule 13 (procedure_id)


State 8

    7 main_procedure_decl_stm: PROCEDURE MAIN . LEFT_PAR RIGHT_PAR RETURN return_type body_of_procedure

    LEFT_PAR  shift, and go to state 17


State 9

   11 procedure_header: PROCEDURE procedure_id . LEFT_PAR parameter_list RIGHT_PAR RETURN return_type
   12                 | PROCEDURE procedure_id . LEFT_PAR RIGHT_PAR RETURN return_type

    LEFT_PAR  shift, and go to state 18


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 program: procedures main_procedure_decl_stm .
    4        | procedures main_procedure_decl_stm . procedures

    PROCEDURE  shift, and go to state 13

    $default  reduce using rule 3 (program)

    procedures          go to state 19
    procedure_decl_stm  go to state 5
    procedure_header    go to state 6


State 12

    6 procedures: procedures procedure_decl_stm .

    $default  reduce using rule 6 (procedures)


State 13

   11 procedure_header: PROCEDURE . procedure_id LEFT_PAR parameter_list RIGHT_PAR RETURN return_type
   12                 | PROCEDURE . procedure_id LEFT_PAR RIGHT_PAR RETURN return_type

    ID  shift, and go to state 7

    procedure_id  go to state 9


State 14

    2 program: main_procedure_decl_stm procedures .
    6 procedures: procedures . procedure_decl_stm

    PROCEDURE  shift, and go to state 13

    $default  reduce using rule 2 (program)

    procedure_decl_stm  go to state 12
    procedure_header    go to state 6


State 15

    9 body_of_procedure: LEFT_BRA . body return_stm RIGHT_BRA

    ID        shift, and go to state 20
    VAR       shift, and go to state 21
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    statements          go to state 25
    statement           go to state 26
    if_stm              go to state 27
    while_stm           go to state 28
    assign_stm          go to state 29
    lhs                 go to state 30
    code_block          go to state 31
    body                go to state 32
    var_decl_stms       go to state 33
    var_decl_stm        go to state 34
    procedure_call_stm  go to state 35


State 16

    8 procedure_decl_stm: procedure_header body_of_procedure .

    $default  reduce using rule 8 (procedure_decl_stm)


State 17

    7 main_procedure_decl_stm: PROCEDURE MAIN LEFT_PAR . RIGHT_PAR RETURN return_type body_of_procedure

    RIGHT_PAR  shift, and go to state 36


State 18

   11 procedure_header: PROCEDURE procedure_id LEFT_PAR . parameter_list RIGHT_PAR RETURN return_type
   12                 | PROCEDURE procedure_id LEFT_PAR . RIGHT_PAR RETURN return_type

    ID         shift, and go to state 37
    RIGHT_PAR  shift, and go to state 38

    parameter_list  go to state 39
    ids             go to state 40


State 19

    4 program: procedures main_procedure_decl_stm procedures .
    6 procedures: procedures . procedure_decl_stm

    PROCEDURE  shift, and go to state 13

    $default  reduce using rule 4 (program)

    procedure_decl_stm  go to state 12
    procedure_header    go to state 6


State 20

   27 lhs: ID .

    $default  reduce using rule 27 (lhs)


State 21

   69 var_decl_stm: VAR . ids COLON type SEMICOLON

    ID  shift, and go to state 37

    ids  go to state 41


State 22

   53 code_block: LEFT_BRA . body_of_nested_stmt RIGHT_BRA

    ID        shift, and go to state 20
    VAR       shift, and go to state 21
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 57 (body_of_nested_stmt)

    statements           go to state 42
    statement            go to state 26
    if_stm               go to state 27
    while_stm            go to state 28
    assign_stm           go to state 29
    lhs                  go to state 30
    code_block           go to state 31
    body_of_nested_stmt  go to state 43
    var_decl_stms        go to state 44
    var_decl_stm         go to state 34
    procedure_call_stm   go to state 35


State 23

   23 if_stm: IF . LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA
   24       | IF . LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA

    LEFT_PAR  shift, and go to state 45


State 24

   25 while_stm: WHILE . LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA

    LEFT_PAR  shift, and go to state 46


State 25

   16 statements: statements . statement
   56 body: statements .

    ID        shift, and go to state 20
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 56 (body)

    statement           go to state 47
    if_stm              go to state 27
    while_stm           go to state 28
    assign_stm          go to state 29
    lhs                 go to state 30
    code_block          go to state 31
    procedure_call_stm  go to state 35


State 26

   17 statements: statement .

    $default  reduce using rule 17 (statements)


State 27

   20 statement: if_stm .

    $default  reduce using rule 20 (statement)


State 28

   21 statement: while_stm .

    $default  reduce using rule 21 (statement)


State 29

   18 statement: assign_stm .

    $default  reduce using rule 18 (statement)


State 30

   26 assign_stm: lhs . ASSIGN expression SEMICOLON
   73 procedure_call_stm: lhs . ASSIGN procedure_id LEFT_PAR argument_list RIGHT_PAR SEMICOLON

    ASSIGN  shift, and go to state 48


State 31

   19 statement: code_block .

    $default  reduce using rule 19 (statement)


State 32

    9 body_of_procedure: LEFT_BRA body . return_stm RIGHT_BRA

    RETURN  shift, and go to state 49

    return_stm  go to state 50


State 33

   54 body: var_decl_stms .
   55     | var_decl_stms . statements
   67 var_decl_stms: var_decl_stms . var_decl_stm

    ID        shift, and go to state 20
    VAR       shift, and go to state 21
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 54 (body)

    statements          go to state 51
    statement           go to state 26
    if_stm              go to state 27
    while_stm           go to state 28
    assign_stm          go to state 29
    lhs                 go to state 30
    code_block          go to state 31
    var_decl_stm        go to state 52
    procedure_call_stm  go to state 35


State 34

   68 var_decl_stms: var_decl_stm .

    $default  reduce using rule 68 (var_decl_stms)


State 35

   22 statement: procedure_call_stm .

    $default  reduce using rule 22 (statement)


State 36

    7 main_procedure_decl_stm: PROCEDURE MAIN LEFT_PAR RIGHT_PAR . RETURN return_type body_of_procedure

    RETURN  shift, and go to state 53


State 37

   75 ids: ID .

    $default  reduce using rule 75 (ids)


State 38

   12 procedure_header: PROCEDURE procedure_id LEFT_PAR RIGHT_PAR . RETURN return_type

    RETURN  shift, and go to state 54


State 39

   11 procedure_header: PROCEDURE procedure_id LEFT_PAR parameter_list . RIGHT_PAR RETURN return_type
   15 parameter_list: parameter_list . SEMICOLON ids COLON return_type

    RIGHT_PAR  shift, and go to state 55
    SEMICOLON  shift, and go to state 56


State 40

   14 parameter_list: ids . COLON return_type
   74 ids: ids . COMMA ID

    COLON  shift, and go to state 57
    COMMA  shift, and go to state 58


State 41

   69 var_decl_stm: VAR ids . COLON type SEMICOLON
   74 ids: ids . COMMA ID

    COLON  shift, and go to state 59
    COMMA  shift, and go to state 58


State 42

   16 statements: statements . statement
   60 body_of_nested_stmt: statements .

    ID        shift, and go to state 20
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 60 (body_of_nested_stmt)

    statement           go to state 47
    if_stm              go to state 27
    while_stm           go to state 28
    assign_stm          go to state 29
    lhs                 go to state 30
    code_block          go to state 31
    procedure_call_stm  go to state 35


State 43

   53 code_block: LEFT_BRA body_of_nested_stmt . RIGHT_BRA

    RIGHT_BRA  shift, and go to state 60


State 44

   58 body_of_nested_stmt: var_decl_stms .
   59                    | var_decl_stms . statements
   67 var_decl_stms: var_decl_stms . var_decl_stm

    ID        shift, and go to state 20
    VAR       shift, and go to state 21
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 58 (body_of_nested_stmt)

    statements          go to state 61
    statement           go to state 26
    if_stm              go to state 27
    while_stm           go to state 28
    assign_stm          go to state 29
    lhs                 go to state 30
    code_block          go to state 31
    var_decl_stm        go to state 52
    procedure_call_stm  go to state 35


State 45

   23 if_stm: IF LEFT_PAR . expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA
   24       | IF LEFT_PAR . expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA

    ID        shift, and go to state 62
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    expression       go to state 70
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74


State 46

   25 while_stm: WHILE LEFT_PAR . expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA

    ID        shift, and go to state 62
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    expression       go to state 75
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74


State 47

   16 statements: statements statement .

    $default  reduce using rule 16 (statements)


State 48

   26 assign_stm: lhs ASSIGN . expression SEMICOLON
   73 procedure_call_stm: lhs ASSIGN . procedure_id LEFT_PAR argument_list RIGHT_PAR SEMICOLON

    ID        shift, and go to state 76
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    procedure_id     go to state 77
    expression       go to state 78
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74


State 49

   10 return_stm: RETURN . expression SEMICOLON

    ID        shift, and go to state 62
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    expression       go to state 79
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74


State 50

    9 body_of_procedure: LEFT_BRA body return_stm . RIGHT_BRA

    RIGHT_BRA  shift, and go to state 80


State 51

   16 statements: statements . statement
   55 body: var_decl_stms statements .

    ID        shift, and go to state 20
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 55 (body)

    statement           go to state 47
    if_stm              go to state 27
    while_stm           go to state 28
    assign_stm          go to state 29
    lhs                 go to state 30
    code_block          go to state 31
    procedure_call_stm  go to state 35


State 52

   67 var_decl_stms: var_decl_stms var_decl_stm .

    $default  reduce using rule 67 (var_decl_stms)


State 53

    7 main_procedure_decl_stm: PROCEDURE MAIN LEFT_PAR RIGHT_PAR RETURN . return_type body_of_procedure

    BOOLEAN_TYPE  shift, and go to state 81
    CHAR_TYPE     shift, and go to state 82
    INTEGER_TYPE  shift, and go to state 83

    return_type  go to state 84


State 54

   12 procedure_header: PROCEDURE procedure_id LEFT_PAR RIGHT_PAR RETURN . return_type

    BOOLEAN_TYPE  shift, and go to state 81
    CHAR_TYPE     shift, and go to state 82
    INTEGER_TYPE  shift, and go to state 83

    return_type  go to state 85


State 55

   11 procedure_header: PROCEDURE procedure_id LEFT_PAR parameter_list RIGHT_PAR . RETURN return_type

    RETURN  shift, and go to state 86


State 56

   15 parameter_list: parameter_list SEMICOLON . ids COLON return_type

    ID  shift, and go to state 37

    ids  go to state 87


State 57

   14 parameter_list: ids COLON . return_type

    BOOLEAN_TYPE  shift, and go to state 81
    CHAR_TYPE     shift, and go to state 82
    INTEGER_TYPE  shift, and go to state 83

    return_type  go to state 88


State 58

   74 ids: ids COMMA . ID

    ID  shift, and go to state 89


State 59

   69 var_decl_stm: VAR ids COLON . type SEMICOLON

    BOOLEAN_TYPE  shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    INTEGER_TYPE  shift, and go to state 92

    type  go to state 93


State 60

   53 code_block: LEFT_BRA body_of_nested_stmt RIGHT_BRA .

    $default  reduce using rule 53 (code_block)


State 61

   16 statements: statements . statement
   59 body_of_nested_stmt: var_decl_stms statements .

    ID        shift, and go to state 20
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 59 (body_of_nested_stmt)

    statement           go to state 47
    if_stm              go to state 27
    while_stm           go to state 28
    assign_stm          go to state 29
    lhs                 go to state 30
    code_block          go to state 31
    procedure_call_stm  go to state 35


State 62

   32 factor: ID .

    $default  reduce using rule 32 (factor)


State 63

   36 integer: INTEGER .

    $default  reduce using rule 36 (integer)


State 64

   34 factor: BOOLEAN .

    $default  reduce using rule 34 (factor)


State 65

   37 char: CHAR .

    $default  reduce using rule 37 (char)


State 66

   31 expression: LEFT_PAR . expression RIGHT_PAR

    ID        shift, and go to state 62
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    expression       go to state 94
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74


State 67

   52 uniary_operator: NEGATE .

    $default  reduce using rule 52 (uniary_operator)


State 68

   50 uniary_operator: PLUS .

    $default  reduce using rule 50 (uniary_operator)


State 69

   51 uniary_operator: MINUS .

    $default  reduce using rule 51 (uniary_operator)


State 70

   23 if_stm: IF LEFT_PAR expression . RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA
   24       | IF LEFT_PAR expression . RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA
   29 expression: expression . binary_operator expression

    RIGHT_PAR    shift, and go to state 95
    OR           shift, and go to state 96
    AND          shift, and go to state 97
    EQUAL        shift, and go to state 98
    NOT_EQUAL    shift, and go to state 99
    BIG          shift, and go to state 100
    BIG_EQUAL    shift, and go to state 101
    SMALL        shift, and go to state 102
    SMALL_EQUAL  shift, and go to state 103
    PLUS         shift, and go to state 104
    MINUS        shift, and go to state 105
    ASTERISK     shift, and go to state 106
    SLASH        shift, and go to state 107

    binary_operator  go to state 108


State 71

   28 expression: factor .

    $default  reduce using rule 28 (expression)


State 72

   33 factor: integer .

    $default  reduce using rule 33 (factor)


State 73

   35 factor: char .

    $default  reduce using rule 35 (factor)


State 74

   30 expression: uniary_operator . expression

    ID        shift, and go to state 62
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    expression       go to state 109
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74


State 75

   25 while_stm: WHILE LEFT_PAR expression . RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA
   29 expression: expression . binary_operator expression

    RIGHT_PAR    shift, and go to state 110
    OR           shift, and go to state 96
    AND          shift, and go to state 97
    EQUAL        shift, and go to state 98
    NOT_EQUAL    shift, and go to state 99
    BIG          shift, and go to state 100
    BIG_EQUAL    shift, and go to state 101
    SMALL        shift, and go to state 102
    SMALL_EQUAL  shift, and go to state 103
    PLUS         shift, and go to state 104
    MINUS        shift, and go to state 105
    ASTERISK     shift, and go to state 106
    SLASH        shift, and go to state 107

    binary_operator  go to state 108


State 76

   13 procedure_id: ID .
   32 factor: ID .

    LEFT_PAR  reduce using rule 13 (procedure_id)
    $default  reduce using rule 32 (factor)


State 77

   73 procedure_call_stm: lhs ASSIGN procedure_id . LEFT_PAR argument_list RIGHT_PAR SEMICOLON

    LEFT_PAR  shift, and go to state 111


State 78

   26 assign_stm: lhs ASSIGN expression . SEMICOLON
   29 expression: expression . binary_operator expression

    SEMICOLON    shift, and go to state 112
    OR           shift, and go to state 96
    AND          shift, and go to state 97
    EQUAL        shift, and go to state 98
    NOT_EQUAL    shift, and go to state 99
    BIG          shift, and go to state 100
    BIG_EQUAL    shift, and go to state 101
    SMALL        shift, and go to state 102
    SMALL_EQUAL  shift, and go to state 103
    PLUS         shift, and go to state 104
    MINUS        shift, and go to state 105
    ASTERISK     shift, and go to state 106
    SLASH        shift, and go to state 107

    binary_operator  go to state 108


State 79

   10 return_stm: RETURN expression . SEMICOLON
   29 expression: expression . binary_operator expression

    SEMICOLON    shift, and go to state 113
    OR           shift, and go to state 96
    AND          shift, and go to state 97
    EQUAL        shift, and go to state 98
    NOT_EQUAL    shift, and go to state 99
    BIG          shift, and go to state 100
    BIG_EQUAL    shift, and go to state 101
    SMALL        shift, and go to state 102
    SMALL_EQUAL  shift, and go to state 103
    PLUS         shift, and go to state 104
    MINUS        shift, and go to state 105
    ASTERISK     shift, and go to state 106
    SLASH        shift, and go to state 107

    binary_operator  go to state 108


State 80

    9 body_of_procedure: LEFT_BRA body return_stm RIGHT_BRA .

    $default  reduce using rule 9 (body_of_procedure)


State 81

   63 return_type: BOOLEAN_TYPE .

    $default  reduce using rule 63 (return_type)


State 82

   62 return_type: CHAR_TYPE .

    $default  reduce using rule 62 (return_type)


State 83

   61 return_type: INTEGER_TYPE .

    $default  reduce using rule 61 (return_type)


State 84

    7 main_procedure_decl_stm: PROCEDURE MAIN LEFT_PAR RIGHT_PAR RETURN return_type . body_of_procedure

    LEFT_BRA  shift, and go to state 15

    body_of_procedure  go to state 114


State 85

   12 procedure_header: PROCEDURE procedure_id LEFT_PAR RIGHT_PAR RETURN return_type .

    $default  reduce using rule 12 (procedure_header)


State 86

   11 procedure_header: PROCEDURE procedure_id LEFT_PAR parameter_list RIGHT_PAR RETURN . return_type

    BOOLEAN_TYPE  shift, and go to state 81
    CHAR_TYPE     shift, and go to state 82
    INTEGER_TYPE  shift, and go to state 83

    return_type  go to state 115


State 87

   15 parameter_list: parameter_list SEMICOLON ids . COLON return_type
   74 ids: ids . COMMA ID

    COLON  shift, and go to state 116
    COMMA  shift, and go to state 58


State 88

   14 parameter_list: ids COLON return_type .

    $default  reduce using rule 14 (parameter_list)


State 89

   74 ids: ids COMMA ID .

    $default  reduce using rule 74 (ids)


State 90

   66 type: BOOLEAN_TYPE .

    $default  reduce using rule 66 (type)


State 91

   65 type: CHAR_TYPE .

    $default  reduce using rule 65 (type)


State 92

   64 type: INTEGER_TYPE .

    $default  reduce using rule 64 (type)


State 93

   69 var_decl_stm: VAR ids COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 94

   29 expression: expression . binary_operator expression
   31           | LEFT_PAR expression . RIGHT_PAR

    RIGHT_PAR    shift, and go to state 118
    OR           shift, and go to state 96
    AND          shift, and go to state 97
    EQUAL        shift, and go to state 98
    NOT_EQUAL    shift, and go to state 99
    BIG          shift, and go to state 100
    BIG_EQUAL    shift, and go to state 101
    SMALL        shift, and go to state 102
    SMALL_EQUAL  shift, and go to state 103
    PLUS         shift, and go to state 104
    MINUS        shift, and go to state 105
    ASTERISK     shift, and go to state 106
    SLASH        shift, and go to state 107

    binary_operator  go to state 108


State 95

   23 if_stm: IF LEFT_PAR expression RIGHT_PAR . LEFT_BRA body_of_nested_stmt RIGHT_BRA
   24       | IF LEFT_PAR expression RIGHT_PAR . LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA

    LEFT_BRA  shift, and go to state 119


State 96

   49 binary_operator: OR .

    $default  reduce using rule 49 (binary_operator)


State 97

   48 binary_operator: AND .

    $default  reduce using rule 48 (binary_operator)


State 98

   42 binary_operator: EQUAL .

    $default  reduce using rule 42 (binary_operator)


State 99

   43 binary_operator: NOT_EQUAL .

    $default  reduce using rule 43 (binary_operator)


State 100

   44 binary_operator: BIG .

    $default  reduce using rule 44 (binary_operator)


State 101

   45 binary_operator: BIG_EQUAL .

    $default  reduce using rule 45 (binary_operator)


State 102

   46 binary_operator: SMALL .

    $default  reduce using rule 46 (binary_operator)


State 103

   47 binary_operator: SMALL_EQUAL .

    $default  reduce using rule 47 (binary_operator)


State 104

   38 binary_operator: PLUS .

    $default  reduce using rule 38 (binary_operator)


State 105

   39 binary_operator: MINUS .

    $default  reduce using rule 39 (binary_operator)


State 106

   40 binary_operator: ASTERISK .

    $default  reduce using rule 40 (binary_operator)


State 107

   41 binary_operator: SLASH .

    $default  reduce using rule 41 (binary_operator)


State 108

   29 expression: expression binary_operator . expression

    ID        shift, and go to state 62
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    expression       go to state 120
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74


State 109

   29 expression: expression . binary_operator expression
   30           | uniary_operator expression .

    $default  reduce using rule 30 (expression)

    binary_operator  go to state 108


State 110

   25 while_stm: WHILE LEFT_PAR expression RIGHT_PAR . LEFT_BRA body_of_nested_stmt RIGHT_BRA

    LEFT_BRA  shift, and go to state 121


State 111

   73 procedure_call_stm: lhs ASSIGN procedure_id LEFT_PAR . argument_list RIGHT_PAR SEMICOLON

    ID        shift, and go to state 62
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    $default  reduce using rule 72 (argument_list)

    expression       go to state 122
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74
    argument_list    go to state 123


State 112

   26 assign_stm: lhs ASSIGN expression SEMICOLON .

    $default  reduce using rule 26 (assign_stm)


State 113

   10 return_stm: RETURN expression SEMICOLON .

    $default  reduce using rule 10 (return_stm)


State 114

    7 main_procedure_decl_stm: PROCEDURE MAIN LEFT_PAR RIGHT_PAR RETURN return_type body_of_procedure .

    $default  reduce using rule 7 (main_procedure_decl_stm)


State 115

   11 procedure_header: PROCEDURE procedure_id LEFT_PAR parameter_list RIGHT_PAR RETURN return_type .

    $default  reduce using rule 11 (procedure_header)


State 116

   15 parameter_list: parameter_list SEMICOLON ids COLON . return_type

    BOOLEAN_TYPE  shift, and go to state 81
    CHAR_TYPE     shift, and go to state 82
    INTEGER_TYPE  shift, and go to state 83

    return_type  go to state 124


State 117

   69 var_decl_stm: VAR ids COLON type SEMICOLON .

    $default  reduce using rule 69 (var_decl_stm)


State 118

   31 expression: LEFT_PAR expression RIGHT_PAR .

    $default  reduce using rule 31 (expression)


State 119

   23 if_stm: IF LEFT_PAR expression RIGHT_PAR LEFT_BRA . body_of_nested_stmt RIGHT_BRA
   24       | IF LEFT_PAR expression RIGHT_PAR LEFT_BRA . body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA

    ID        shift, and go to state 20
    VAR       shift, and go to state 21
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 57 (body_of_nested_stmt)

    statements           go to state 42
    statement            go to state 26
    if_stm               go to state 27
    while_stm            go to state 28
    assign_stm           go to state 29
    lhs                  go to state 30
    code_block           go to state 31
    body_of_nested_stmt  go to state 125
    var_decl_stms        go to state 44
    var_decl_stm         go to state 34
    procedure_call_stm   go to state 35


State 120

   29 expression: expression . binary_operator expression
   29           | expression binary_operator expression .

    OR           shift, and go to state 96
    AND          shift, and go to state 97
    EQUAL        shift, and go to state 98
    NOT_EQUAL    shift, and go to state 99
    BIG          shift, and go to state 100
    BIG_EQUAL    shift, and go to state 101
    SMALL        shift, and go to state 102
    SMALL_EQUAL  shift, and go to state 103
    PLUS         shift, and go to state 104
    MINUS        shift, and go to state 105
    ASTERISK     shift, and go to state 106
    SLASH        shift, and go to state 107

    OR           [reduce using rule 29 (expression)]
    AND          [reduce using rule 29 (expression)]
    EQUAL        [reduce using rule 29 (expression)]
    NOT_EQUAL    [reduce using rule 29 (expression)]
    BIG          [reduce using rule 29 (expression)]
    BIG_EQUAL    [reduce using rule 29 (expression)]
    SMALL        [reduce using rule 29 (expression)]
    SMALL_EQUAL  [reduce using rule 29 (expression)]
    PLUS         [reduce using rule 29 (expression)]
    MINUS        [reduce using rule 29 (expression)]
    ASTERISK     [reduce using rule 29 (expression)]
    SLASH        [reduce using rule 29 (expression)]
    $default     reduce using rule 29 (expression)

    binary_operator  go to state 108


State 121

   25 while_stm: WHILE LEFT_PAR expression RIGHT_PAR LEFT_BRA . body_of_nested_stmt RIGHT_BRA

    ID        shift, and go to state 20
    VAR       shift, and go to state 21
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 57 (body_of_nested_stmt)

    statements           go to state 42
    statement            go to state 26
    if_stm               go to state 27
    while_stm            go to state 28
    assign_stm           go to state 29
    lhs                  go to state 30
    code_block           go to state 31
    body_of_nested_stmt  go to state 126
    var_decl_stms        go to state 44
    var_decl_stm         go to state 34
    procedure_call_stm   go to state 35


State 122

   29 expression: expression . binary_operator expression
   71 argument_list: expression .

    OR           shift, and go to state 96
    AND          shift, and go to state 97
    EQUAL        shift, and go to state 98
    NOT_EQUAL    shift, and go to state 99
    BIG          shift, and go to state 100
    BIG_EQUAL    shift, and go to state 101
    SMALL        shift, and go to state 102
    SMALL_EQUAL  shift, and go to state 103
    PLUS         shift, and go to state 104
    MINUS        shift, and go to state 105
    ASTERISK     shift, and go to state 106
    SLASH        shift, and go to state 107

    $default  reduce using rule 71 (argument_list)

    binary_operator  go to state 108


State 123

   70 argument_list: argument_list . COMMA expression
   73 procedure_call_stm: lhs ASSIGN procedure_id LEFT_PAR argument_list . RIGHT_PAR SEMICOLON

    RIGHT_PAR  shift, and go to state 127
    COMMA      shift, and go to state 128


State 124

   15 parameter_list: parameter_list SEMICOLON ids COLON return_type .

    $default  reduce using rule 15 (parameter_list)


State 125

   23 if_stm: IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt . RIGHT_BRA
   24       | IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt . RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA

    RIGHT_BRA  shift, and go to state 129


State 126

   25 while_stm: WHILE LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt . RIGHT_BRA

    RIGHT_BRA  shift, and go to state 130


State 127

   73 procedure_call_stm: lhs ASSIGN procedure_id LEFT_PAR argument_list RIGHT_PAR . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 128

   70 argument_list: argument_list COMMA . expression

    ID        shift, and go to state 62
    INTEGER   shift, and go to state 63
    BOOLEAN   shift, and go to state 64
    CHAR      shift, and go to state 65
    LEFT_PAR  shift, and go to state 66
    NEGATE    shift, and go to state 67
    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69

    expression       go to state 132
    factor           go to state 71
    integer          go to state 72
    char             go to state 73
    uniary_operator  go to state 74


State 129

   23 if_stm: IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA .
   24       | IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA . ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA

    ELSE  shift, and go to state 133

    $default  reduce using rule 23 (if_stm)


State 130

   25 while_stm: WHILE LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA .

    $default  reduce using rule 25 (while_stm)


State 131

   73 procedure_call_stm: lhs ASSIGN procedure_id LEFT_PAR argument_list RIGHT_PAR SEMICOLON .

    $default  reduce using rule 73 (procedure_call_stm)


State 132

   29 expression: expression . binary_operator expression
   70 argument_list: argument_list COMMA expression .

    OR           shift, and go to state 96
    AND          shift, and go to state 97
    EQUAL        shift, and go to state 98
    NOT_EQUAL    shift, and go to state 99
    BIG          shift, and go to state 100
    BIG_EQUAL    shift, and go to state 101
    SMALL        shift, and go to state 102
    SMALL_EQUAL  shift, and go to state 103
    PLUS         shift, and go to state 104
    MINUS        shift, and go to state 105
    ASTERISK     shift, and go to state 106
    SLASH        shift, and go to state 107

    $default  reduce using rule 70 (argument_list)

    binary_operator  go to state 108


State 133

   24 if_stm: IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE . LEFT_BRA body_of_nested_stmt RIGHT_BRA

    LEFT_BRA  shift, and go to state 134


State 134

   24 if_stm: IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA . body_of_nested_stmt RIGHT_BRA

    ID        shift, and go to state 20
    VAR       shift, and go to state 21
    LEFT_BRA  shift, and go to state 22
    IF        shift, and go to state 23
    WHILE     shift, and go to state 24

    $default  reduce using rule 57 (body_of_nested_stmt)

    statements           go to state 42
    statement            go to state 26
    if_stm               go to state 27
    while_stm            go to state 28
    assign_stm           go to state 29
    lhs                  go to state 30
    code_block           go to state 31
    body_of_nested_stmt  go to state 135
    var_decl_stms        go to state 44
    var_decl_stm         go to state 34
    procedure_call_stm   go to state 35


State 135

   24 if_stm: IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt . RIGHT_BRA

    RIGHT_BRA  shift, and go to state 136


State 136

   24 if_stm: IF LEFT_PAR expression RIGHT_PAR LEFT_BRA body_of_nested_stmt RIGHT_BRA ELSE LEFT_BRA body_of_nested_stmt RIGHT_BRA .

    $default  reduce using rule 24 (if_stm)
